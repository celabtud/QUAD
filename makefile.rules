##############################################################
#
# This file includes all the test targets as well as all the
# non-default build rules and test recipes.
#
##############################################################
# tracing Utility BBlock Channel Exception RenewalFlags Q2XMLFile ticpp tinystr tinyxml tinyxmlerror tinyxmlparser

ifdef LIBELF_INC
    LIBELF_CXXFLAGS=-I$(LIBELF_INC) -I$(LIBELF_INC)/libelf -DQUAD_LIBELF
else
    $(warning To take advantage of all the features of QUAD please point LIBELF_INC to the include directory where libelf is installed (ex: /usr/local/include))
endif


TOOL_CXXFLAGS+=$(LIBELF_CXXFLAGS)

##############################################################
#
# Test targets
#
##############################################################

###### Place all generic definitions here ######

# This defines tests which run tools of the same name.  This is simply for convenience to avoid
# defining the test name twice (once in TOOL_ROOTS and again in TEST_ROOTS).
# Tests defined here should not be defined in TOOL_ROOTS and TEST_ROOTS.
TEST_TOOL_ROOTS := QUAD 

# This defines the tests to be run that were not already defined in TEST_TOOL_ROOTS.
TEST_ROOTS := 

# This defines a list of tests that should run in the "short" sanity. Tests in this list must also
# appear either in the TEST_TOOL_ROOTS or the TEST_ROOTS list.
# If the entire directory should be tested in sanity, assign TEST_TOOL_ROOTS and TEST_ROOTS to the
# SANITY_SUBSET variable in the tests section below (see example in makefile.rules.tmpl).
SANITY_SUBSET :=

# This defines the tools which will be run during the the tests, and were not already defined in
# TEST_TOOL_ROOTS.
TOOL_ROOTS := 

# This defines the static analysis tools which will be run during the the tests. They should not
# be defined in TEST_TOOL_ROOTS. If a test with the same name exists, it should be defined in
# TEST_ROOTS.
# Note: Static analysis tools are in fact executables linked with the Pin Static Analysis Library.
# This library provides a subset of the Pin APIs which allows the tool to perform static analysis
# of an application or dll. Pin itself is not used when this tool runs.
SA_TOOL_ROOTS :=

# This defines all the applications that will be run during the tests.
APP_ROOTS :=

# This defines any additional object files that need to be compiled.
OBJECT_ROOTS :=

# This defines any additional dlls (shared objects), other than the pintools, that need to be compiled.
DLL_ROOTS :=

# This defines any static libraries (archives), that need to be built.
LIB_ROOTS := 


##############################################################
#
# Test recipes
#
##############################################################

# This section contains recipes for tests other than the default.
# See makefile.default.rules for the default test rules.
# All tests in this section should adhere to the naming convention: <testname>.test


##############################################################
#
# Build rules
#
##############################################################

# This section contains the build rules for all binaries that have special build rules.
# See makefile.default.rules for the default build rules.
SRCDIR=./src
CPPSRCS=QUAD.cpp tracing.cpp Utility.cpp BBlock.cpp Exception.cpp RenewalFlags.cpp\
	Channel.cpp  Q2XMLFile.cpp
CPPOBJS = $(CPPSRCS:%.cpp=$(OBJDIR)%$(OBJ_SUFFIX))
$(OBJDIR)%.o:$(SRCDIR)/%.cpp
	$(CXX) $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

XML_CXXFLAGS=-O3 -g -DTIXML_USE_TICPP -fPIC	
TINYXMLSRCS = ticpp.cpp tinystr.cpp tinyxml.cpp tinyxmlerror.cpp tinyxmlparser.cpp
TINYXMLOBJS = $(TINYXMLSRCS:%.cpp=$(OBJDIR)%.oo)

$(OBJDIR)%.oo:$(SRCDIR)/%.cpp
	$(CXX) $(TOOL_CXXFLAGS) $(XML_CXXFLAGS) $(COMP_OBJ)$@ $<

$(OBJDIR)QUAD$(PINTOOL_SUFFIX): $(CPPOBJS) $(TINYXMLOBJS)
	$(LINKER) $(TOOL_LDFLAGS) $(LINK_EXE)$@ $^ $(TOOL_LPATHS) $(TOOL_LIBS)

# HEADERS=QUAD.h tracing.h Utility.h BBlock.h Channel.h Exception.h RenewalFlags.h Q2XMLFile.h ticpp.h ticpprc.h tinystr.h tinyxml.h
INCDIR=./include
HEADERS=$(INCDIR)/QUAD.h $(INCDIR)/tracing.h $(INCDIR)/Utility.h \
	$(INCDIR)/BBlock.h $(INCDIR)/Channel.h $(INCDIR)/Exception.h \
	$(INCDIR)/RenewalFlags.h $(INCDIR)/Q2XMLFile.h $(INCDIR)/ticpp.h \
	$(INCDIR)/ticpprc.h $(INCDIR)/tinystr.h $(INCDIR)/tinyxml.h
TOOL_CXXFLAGS+=-I$(INCDIR)
$(OBJDIR)QUAD$(OBJ_SUFFIX): $(HEADERS)

clean: cleantemp
cleantemp:
	-rm -rf *~ $(TINYXMLOBJS)
